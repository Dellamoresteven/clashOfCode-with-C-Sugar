/* This file is auto generated by C-Sugar @author Steven Dellamore 
URL = https://github.com/Dellamoresteven/C-Sugar */

// author: Steven Dellamore
// date: 2020-2-19
// version: 1.0.0

#include <iostream>
#include <stdlib.h>
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
#include <cctype>
#include <list>
#include <sys/stat.h>
#include <unistd.h>
#include <functional>
#include <map>
#include <sstream>
#include <iterator>
#include <string>

#include <math.h>

using namespace std;

template <typename T, typename U >
vector<string> splitByDelim( T s, U d ) {
    s += " ";
    // ret @TODO
    auto ret = std::vector< std::string >();
    std::string delim(d);
    std::string token;
    while ( s.find(d) != std::string::npos) {
        token = s.substr(0, s.find(d));
        ret.push_back(token); // pushing token onto ret

        s.erase(0, s.find(d) + delim.length());
    }
    return ret;
}

int main() {
    std::string S;
    getline(std::cin, S);
    map<int, int> sorted;
    // var vecSplit = splitByDelim<std::string, std::string>( S, " " );
    // vecSplit @TODO
    auto vecSplit = splitByDelim( S, " " );
    // Printing out the entire vecSplit vector with delim: "\n"
    for (auto i = vecSplit.begin(); i != vecSplit.end(); ++i)
    {
        std::cout << *i << "\n";
    }
}